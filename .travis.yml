language: cpp

env:
  global:
    # Ubuntu version
    - LINUX_DIST=bionic
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # Global build options and C++ flags
    - CXX_FLAGS="-Wall -pedantic -Werror -Wno-variadic-macros -Wno-long-long -Wno-shadow"
    # Misc
    - RUN_TESTS=true
    - COVERAGE=false

jobs:
  include:
    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          packages:
            - gcc-4.8
            - g++-4.8
            - clang-3.7
            - valgrind
            # Misc
            - python-yaml
            - lcov
            - libopencv-dev
            - libx11-dev
            - xorg-dev
            - freeglut3-dev
            - libudev-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

before_install:
  # Combine global build options with OS/compiler-dependent options
  - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
  - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}

install:
  - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
  - echo ${PATH}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v

  # Download and install recent cmake
  - git clone -b v3.16.3 https://cmake.org/cmake.git cmake
  - cd cmake
  - ./bootstrap --system-curl
  - make
  - sudo make install
  - cd ..

script:
  ############################################################################
  # Build main and tests
  ############################################################################
  - mkdir -p build
  - cd build
  - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON ..
  - make
  - make AlmostAgricola_coverage
  - ctest
  - codecov


after_success:
  - lcov --directory . --capture --output-file coverage.info
  - lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' './ext/*' --output-file coverage.info
  - lcov --list coverage.info
  - bash <(curl -s https://codecov.io/bash)
